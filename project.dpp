TYPE = console

[!DP_LIB]
THROW=Dmitrj PRO Lib is not set. Install this lib and set in PMake.
[]
[!DP_LIB_LIB]
THROW=Dmitrj PRO Lib is not set. Install this lib and set in PMake.
[]

[!DP_LIB_NETWORK_LIB]
THROW=Dmitrj PRO Lib is not set or it is old version. Install this lib and set in PMake.
[]
[!DP_LIB_ADDONS_LIB]
THROW=Dmitrj PRO Lib is not set, or it is old version or addons is not compiled. Install this lib and set in PMake.
[]

CXXFLAGS=-std=c++11

INCLUDE = DP_LIB
LIBS = DP_LIB_ADDONS_LIB
LIBS = DP_LIB_NETWORK_LIB
LIBS = DP_LIB_LIB

[WINDOWS]
CXXFLAGS=-DDP_WIN
CXXFLAGS=-DDP_WINDOWS
LIBS=-lws2_32 -lwininet -lrasapi32
[]
[LINUX]
CXXFLAGS=-DDP_LIN
CXXFLAGS=-DDP_LINUX
[]

LIBS = -static-libstdc++, -static-libgcc, -pthread

OUT = ShadowSocksConsole

{Generate version}
	VERSION=git rev-list master --count ./
	HASHSE=git describe --always --long --tags
	HEAD_VERSION=bash ./releases/version.sh
	
	printf "#pragma once\n" > VERSION.h
	printf "#define SS_VERSION \"${VERSION}\"\n" >> VERSION.h
	printf "#define SS_VERSION_HASHE \"${HASHSE}\"\n" >> VERSION.h
	printf "#define SS_HEAD_VERSION \"${HEAD_VERSION}\"\n" >> VERSION.h
	printf "#define SS_FULL_VERSION \"${HEAD_VERSION} (${VERSION})\"\n" >> VERSION.h
{}

SOURCE = ./main.cpp
HEADER = ./ShadowSocksMain.h
HEADER = ./TCPChecker.h
SOURCE = ./TCPChecker.cpp
HEADER = ./ShadowSocks.h
SOURCE = ./ShadowSocks.cpp
HEADER = ./Tun2Socks.h
SOURCE = ./Tun2Socks.cpp
HEADER = ./SSServer.h
SOURCE = ./SSServer.cpp
HEADER = ./SSClient.h
SOURCE = ./SSClient.cpp
HEADER = ./ConsoleLoop.h
SOURCE = ./ConsoleLoop.cpp
SOURCE = ./ShadowSocksController.cpp
SOURCE = ./libsysproxy.c
HEADER = ./ShadowSocksController.h
SOURCE = ./wwwsrc/WebUI.cpp
HEADER = ./wwwsrc/WebUI.h
SOURCE = ./wwwsrc/WebUIServers.cpp
SOURCE = ./wwwsrc/WebUISettings.cpp
SOURCE = ./wwwsrc/WebUITasks.cpp
SOURCE = ./wwwsrc/WebUIVPN.cpp
SOURCE = ./wwwsrc/WebUIRuns.cpp
HEADER = ./VERSION.h

HEADER = ./www/textfill.h
SOURCE = ./www/textfill.cpp


{Generate www}
	RES=bash -c "../../generate-html cast zip"
{}
HEADER = ./www/www.h